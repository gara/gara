<?xml version="1.0" encoding="UTF-8"?>
<completion prefix="gara.jswt.TreeItem" extends="gara.jswt.Item">
<item repl="getChecked()" display="getChecked() "><![CDATA[Returns the checked state for this item


						Returns:
						    the checked state
]]></item>
<item repl="getExpanded()" display="getExpanded() "><![CDATA[Returns the expanded state for this item


						Returns:
						    the expanded state
]]></item>
<item repl="getItem()" display="getItem() "><![CDATA[Returns a specifiy item with a zero-related index


						Parameters:
						   (int) index - the zero-related index


						Throws:
						   OutOfBoundsException -  if the index does not live within this tree


						Returns:
						    the item
]]></item>
<item repl="getItemCount()" display="getItemCount() "><![CDATA[Returns the amount of the items in the tree


						Returns:
						    the amount
]]></item>
<item repl="getItems()" display="getItems() "><![CDATA[Returns an array with all the items in the tree


						Returns:
						    an array with the items
]]></item>
<item repl="getParent()" display="getParent() "><![CDATA[Returns the widgets parent, which must be a Tree


						Returns:
						    the parent of this widget
]]></item>
<item repl="getParentItem()" display="getParentItem() "><![CDATA[Returns the item's parent item, which must be a TreeItem or null when the item is a root.


						Returns:
						    the parent item
]]></item>
<item repl="indexOf()" display="indexOf() "><![CDATA[Looks for the index of a specified item


						Parameters:
						   (gara.jswt.TreeItem) item - the item for the index


						Throws:
						   gara.jswt.ItemNotExistsException -  if the item does not exist in this tree
   TypeError -  if the item is not a TreeItem


						Returns:
						    the index of the specified item
]]></item>
<item repl="removeAll()" display="removeAll() "><![CDATA[Removes all items from that item

]]></item>
<item repl="setActive()" display="setActive() "><![CDATA[Sets the item active or inactive


						Parameters:
						   (boolean) active - true for active and false for inactive

]]></item>
<item repl="setChecked()" display="setChecked() "><![CDATA[Sets the checked state for this item


						Parameters:
						   (boolean) checked - the new checked state

]]></item>
<item repl="setExpanded()" display="setExpanded() "><![CDATA[Sets a new expanded state for the item


						Parameters:
						   (boolean) expanded - the new expanded state

]]></item>
</completion>
