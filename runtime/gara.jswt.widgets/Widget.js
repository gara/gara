gara.provide("gara.jswt.widgets.Widget");gara.use("gara.EventManager");gara.use("gara.jswt.JSWTException");gara.use("gara.jswt.JSWT");gara.Class("gara.jswt.widgets.Widget",{classes:[],data:{},dataMap:{},disposed:false,disposeListener:[],event:null,handle:null,id:"",listeners:{},parent:null,parentNode:null,style:0,$constructor:function(a,b){this.id="";this.classes=["gara"];this.handle=null;this.parentNode=null;this.parent=a;this.style=b||gara.jswt.JSWT.DEFAULT;this.disposed=false;this.event=null;this.listeners={};this.disposedListeners={};this.data={};this.dataMap={}},addClass:function(a){if(!this.classes.contains(a)){this.classes.push(a);if(this.handle!==null){this.handle.className=this.classes.join(" ")}}return this},addClasses:function(b){b.forEach(function(a){this.addClass(a)},this);return this},addDisposeListener:function(a){if(!this.disposeListener.contains(a)){this.disposeListener.push(a)}return this},addListener:function(a,b){if(!Object.prototype.hasOwnProperty.call(this.listeners,a)){this.listeners[a]=[]}if(!this.listeners[a].contains(b)){this.listeners[a].push(b);this.bindListener(a,b)}return this},bindListener:function(a,b){alert("Trying to bind listener on "+this+". Method not implemented.\n    Type: "+a+"\n    Listener: "+b)},checkWidget:function(){if(this.isDisposed()){throw new gara.jswt.JSWTException(gara.jswt.JSWT.ERROR_WIDGET_DISPOSED);}},dispose:function(){this.disposed=true;this.disposeListener.forEach(function(a,b,d){if(a.widgetDisposed){a.widgetDisposed(this)}},this);for(var c in this.listener){this.listener[c].forEach(function(a,b,d){this.removeListener(c,a)},this)}},getData:function(a){if(typeof(a)==="undefined"){return this.data}else{if(Object.prototype.hasOwnProperty.call(this.dataMap,a)){return this.dataMap[a]}}return null},getId:function(){if(this.id===""){this.id=gara.generateUID()}return this.id},getParent:function(){return this.parent},getStyle:function(){return this.style},hasClass:function(a){return this.classes.contains(a)},isDisposed:function(){return this.disposed},notifyExternalKeyboardListener:function(c,e,f){if(this.listeners.hasOwnProperty(c.type)){this.listeners[c.type].forEach(function(a,b,d){c.target.widget=e;c.target.control=f;if(typeof(a)=="object"&&a.handleEvent){a.handleEvent(c)}else if(typeof(a)=="function"){eval(a+"()")}})}},removeClass:function(a){this.classes.remove(a);if(this.handle!==null){this.handle.className=this.classes.join(" ")}return this},removeDisposeListener:function(a){this.disposeListener.remove(a);return this},removeListener:function(a,b){if(Object.prototype.hasOwnProperty.call(this.listeners,a)&&this.listeners[a].contains(b)){this.listeners[a].remove(b);this.unbindListener(a,b)}return this},setClass:function(a,b){if(!b){this.removeClass(a)}else{this.addClass(a)}return this},setData:function(a,b){if(typeof b==="undefined"){this.data=a}else{this.dataMap[a]=b}return this},setId:function(a){this.id=a;return this},toggleClass:function(a){if(this.classes.contains(a)){this.classes.remove(a)}else{this.classes.push(a)}if(this.handle!==null){this.handle.className=this.classes.join(" ")}},unbindListener:function(a,b){alert("Trying to unbind listener on "+this+". Method not implemented.\n    Type: "+a+"\n    Listener: "+b)}});